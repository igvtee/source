--- a/drivers/mtd/nand/raw/mt7621_nand.c
+++ b/drivers/mtd/nand/raw/mt7621_nand.c
@@ -19,6 +19,7 @@
 #include <linux/mtd/rawnand.h>
 #include <linux/mtd/partitions.h>
 #include <linux/platform_device.h>
+#include <linux/reset.h>
 #include <asm/addrspace.h>
 
 /* NFI core registers */
@@ -117,6 +118,13 @@
 #define   CSEL_S			0
 #define   CSEL_M			GENMASK(1, 0)
 
+#define NFI_IOCON			0x094
+#define   IOCON_BRSTN_S			4
+#define   IOCON_BRSTN_M			GENMASK(7, 4)
+#define   IOCON_L2NW			BIT(2)
+#define   IOCON_L2NR			BIT(1)
+#define   IOCON_NLDPD			BIT(0)
+
 #define NFI_FDM0L			0x0a0
 #define NFI_FDML(n)			(0x0a0 + ((n) << 3))
 
@@ -416,6 +424,8 @@ static inline void mt7621_nfc_hw_init(st
 {
 	u32 acccon;
 
+	device_reset(nfc->dev);
+
 	/*
 	 * CNRNB: nand ready/busy register
 	 * -------------------------------
@@ -432,6 +442,10 @@ static inline void mt7621_nfc_hw_init(st
 			   ACCCON_RLT_DEF);
 
 	nfi_write32(nfc, NFI_ACCCON, acccon);
+
+	/* data bus bull down when no use */
+	nfi_write16(nfc, NFI_IOCON, (4 << IOCON_BRSTN_S) | IOCON_L2NW |
+		    IOCON_L2NR | IOCON_NLDPD);
 }
 
 static int mt7621_nfc_send_command(struct mt7621_nfc *nfc, u8 command)
@@ -838,6 +852,7 @@ static int mt7621_nfc_ecc_init(struct mt
 		return -EINVAL;
 	}
 
+	nand->ecc.prepad = NFI_FDM_SIZE;
 	nand->ecc.size = ECC_SECTOR_SIZE;
 	nand->ecc.steps = mtd->writesize / nand->ecc.size;
 
@@ -1299,6 +1314,16 @@ static int mt7621_nfc_probe(struct platf
 			return ret;
 		}
 	}
+#if 1
+	/* enable clock */
+	{
+#define RALINK_SYSCTL_BASE      0xBE000000
+		u32 reg = (*(volatile u32 *)(RALINK_SYSCTL_BASE + 0x30));
+		reg |= BIT(15);
+		reg &= ~(BIT(30) | BIT(18));
+		(*(volatile u32 *)(RALINK_SYSCTL_BASE + 0x30)) = reg;
+	}
+#endif
 
 	platform_set_drvdata(pdev, nfc);
 
